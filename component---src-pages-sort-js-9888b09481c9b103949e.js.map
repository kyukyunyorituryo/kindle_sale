{"version":3,"file":"component---src-pages-sort-js-9888b09481c9b103949e.js","mappings":"6IAsBA,IArBaA,IAAoB,IAAnB,IAAEC,EAAG,MAACC,GAAOF,EAEvB,OACaG,EAAAA,cAAA,UACHA,EAAAA,cAAA,WACEC,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAETH,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACFA,EAAAA,cAAA,KAAGI,IAAI,aAAaC,OAAO,SAASC,KAAMR,GACrCC,MAKJ,C,iICmCjB,UA5CaF,IAAyB,IAADU,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUZ,EAC9B,MAAMa,GAAkC,QAAtBH,EAAAC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBR,QAAS,QAC7Cc,EAAQL,EAAKM,QAAQC,MAE3B,OACIf,EAAAA,cAACgB,EAAAA,EAAM,CAACP,SAAUA,EAAUV,MAAOW,GACzCV,EAAAA,cAAA,SAAG,+EACHA,EAAAA,cAAA,MAAIiB,MAAM,gBAAe,gBACnBjB,EAAAA,cAAA,MAAIkB,MAAO,CAAEC,UAAW,SAGhBnB,EAAAA,cAACoB,EAAAA,EAAI,CAACtB,IAAI,0BAA0BC,MAAM,4BAEtCC,EAAAA,cAAA,MAAIiB,MAAM,gBAAe,YACzBjB,EAAAA,cAAA,MAAIkB,MAAO,CAAEC,UAAW,SAEjCN,EAAMQ,KAAIC,IACT,MAAMvB,EAAQuB,EAAKC,UAAUC,WAAaF,EAAKG,OAAOC,KAEtD,OACE1B,EAAAA,cAAA,MAAI2B,IAAKL,EAAKG,OAAOC,MACnB1B,EAAAA,cAAA,WACEC,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAETH,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAAC4B,EAAAA,KAAI,CAACC,GAAIP,EAAKG,OAAOC,KAAMI,SAAS,OACnC9B,EAAAA,cAAA,QAAM8B,SAAS,YAAY/B,KAG/BC,EAAAA,cAAA,aAAQsB,EAAKC,UAAUQ,QAGxB,KAIL/B,EAAAA,cAACgC,EAAAA,EAAG,MACG,EAWZ,MAAMC,EAAOA,IAAMjC,EAAAA,cAACkC,EAAAA,EAAG,CAACnC,MAAM,4B","sources":["webpack://gatsby-starter-blog/./src/components/list.js","webpack://gatsby-starter-blog/./src/pages/sort.js"],"sourcesContent":["import * as React from \"react\"\r\nconst List = ({ url,title }) => {\r\n\r\n    return (\r\n                 <li >\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                <a rel=\"noreferrer\" target=\"_blank\" href={url}>\r\n                    {title}\r\n                </a>\r\n                  </h2>\r\n                </header>\r\n              </article>\r\n            </li>\r\n    )\r\n}\r\n\r\nexport default List\r\n","// src/pages/page.js\r\nimport React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport List from \"../components/list\"\r\n\r\nconst Sort = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allFile.nodes\r\n\r\n  return (\r\n      <Layout location={location} title={siteTitle}>\r\n<p>Kindle本のセールを一覧で表示するサイトです。アマゾン以外のセール品と比較することで、アマゾンサイトで紹介されていないセール品まで網羅しています。</p>\r\n<h1 class=\"main-heading\">Amazon主催のセール</h1>\r\n      <ol style={{ listStyle: `none` }}\r\n      >\r\n\r\n              <List url=\"https://amzn.to/3u0PAI3\" title=\"Kindle Unlimited定額読み放題\" />\r\n                  </ol>\r\n                  <h1 class=\"main-heading\">出版社別のセール</h1>\r\n                  <ol style={{ listStyle: `none` }}\r\n      >\r\n        {posts.map(post => {\r\n          const title = post.childJson.Saletitle || post.fields.slug\r\n\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                    <Link to={post.fields.slug} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <small>{post.childJson.Date}</small>\r\n                </header>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n            <Bio />\r\n          </Layout>\r\n  )\r\n}\r\n\r\nexport default Sort\r\n\r\n/**\r\n * Head export to define metadata for the page\r\n *\r\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\r\n */\r\nexport const Head = () => <Seo title=\"追加日順に並べ替え「kindleセールチェック」\" />\r\n\r\nexport const pageQuery = graphql`\r\nquery MyQuery {\r\n  site {\r\n    siteMetadata {\r\n      title\r\n    }\r\n  }\r\n  allFile(\r\n    sort: {childJson: {Date: DESC}}\r\n    limit: 1000\r\n    filter: {extension: {eq: \"json\"}}\r\n  ) {\r\n    nodes {\r\n      childJson {\r\n        Saletitle\r\n        Day\r\n        Title\r\n        Date(formatString: \"YYYY年MM月DD日\")\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n"],"names":["_ref","url","title","React","className","itemScope","itemType","rel","target","href","_data$site$siteMetada","data","location","siteTitle","site","siteMetadata","posts","allFile","nodes","Layout","class","style","listStyle","List","map","post","childJson","Saletitle","fields","slug","key","Link","to","itemProp","Date","Bio","Head","Seo"],"sourceRoot":""}