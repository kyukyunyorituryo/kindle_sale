{"version":3,"file":"component---src-templates-blog-post-js-8d68c642f7ba9f3c47a1.js","mappings":"6IA2CA,IAxCgB,IAAe,IAAd,KAAEA,GAAM,EAIzB,IAAIC,EACAC,EACJ,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAKI,OAAQD,IACjCF,EAAQD,EAAKG,GAAGE,SAASC,QAAQ,UAAW,WAC5CJ,EAAQF,EAAKG,GAAGE,SAASC,QAAQ,UAAW,UAC5CN,EAAKG,GAAGF,QAAQA,EAChBD,EAAKG,GAAGD,QAAQA,EAIf,MAAMK,EAAcC,MAAMC,KAAK,IAAIC,IAAIV,EAAKW,KAAKC,GAAS,CAACA,EAAKC,KAAMD,MAAQE,UAE3E,OACA,uBAAMC,GAAG,QACNR,EAAYI,KAAIK,GAClB,uBAAKC,IAAKD,EAAEH,MACT,qBAAGK,UAAU,wBAAwBC,OAAO,SAASC,IAAI,sBAAsBC,KAAML,EAAEM,KACrF,uBAAKJ,UAAU,oBACb,uBAAKA,UAAU,qBAAqBF,EAAEO,OACtC,uBAAKL,UAAU,sBAAqB,MAAIF,EAAEQ,MAAM,UAAQR,EAAES,OAAO,IAAET,EAAEU,YAAY,QAAMV,EAAEW,UAAU,UAAQX,EAAEY,WAE/G,uBAAKV,UAAU,+BACf,uBAAKA,UAAU,oBACdW,OAAWb,EAAEd,QAAO,UAAUc,EAAEf,QAAO,UAAUe,EAAEX,SAAQ,IACjEyB,IAAKd,EAAEd,QACP6B,MAAM,kCACLC,QAAQ,OAAOC,IAAKjB,EAAEO,aAMlB,C,iIC9BV,MAmDaW,EAAO,IAAc,IAAb,KAAEC,GAAK,EAC1B,OACE,gBAAC,IAAG,CACFC,MAAOD,EAAKE,KAAKC,aAAa,GAAGC,UACjCC,SAAUL,EAAKE,KAAKC,aAAa,GAAGjC,SACpCoC,YAAaN,EAAKE,KAAKC,aAAa,GAAGC,WACvC,EAIN,UA7DyB,IAGlB,IAAD,MAHoB,KACxBJ,EAAI,SACJO,GACD,EACD,IAAI1C,EAAOmC,EAAKE,KAAKC,aACpB,MAAMK,EAAUR,EAAKS,KAAKC,aAAaF,SACxC,IAAIG,EAAOX,EAAKE,KAAKC,aAAa,GAAGS,OAAOC,MAAM,KAC9CC,EAAQd,EAAKE,KAAKC,aAAa,GAAGY,QAAQF,MAAM,KACpDC,EAAQA,EAAQE,QAAOC,GAAKT,EAASU,SAASD,KAC9CN,EAAO1C,OAAO,GACd6C,EAAQ7C,OAAO,GACf,MAAMkD,GAAkC,QAAtB,EAAAnB,EAAKS,KAAKC,oBAAY,aAAtB,EAAwBT,QAAK,QAC3C,OACA,gCACI,gBAAC,IAAM,CAACM,SAAUA,EAAUN,MAAOkB,GACrC,2BACEpC,UAAU,YACVqC,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAW,eAAatB,EAAKE,KAAKC,aAAa,GAAGC,WAC/D,yBAAIJ,EAAKE,KAAKC,aAAa,GAAGoB,KAAK,QAAMZ,GAAUA,EAAO1C,OAAS,GAAK0C,EAAOnC,KAAImC,GAGzE,8BAASA,KAGhB,QAAMG,GAAWA,EAAQ7C,OAAS,GAAK6C,EAAQtC,KAAIsC,GAG5C,8BAASA,OAMrB,gBAAC,IAAO,CAACjD,KAAMA,IACf,2BACA,gBAAC,IAAK,CACJoC,MAAOD,EAAKE,KAAKC,aAAa,GAAGC,UACjCoB,IAAG,GAAKxB,EAAKS,KAAKC,aAAae,QAAUzB,EAAKE,KAAKwB,OAAOC,OAE5D,8BACE,gBAAC,IAAG,SAIH,C","sources":["webpack://gatsby-starter-blog/./src/components/amazons.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\r\n\r\n\r\nconst Amazons = ({ book }) => {\r\n\r\n//数の制限\r\n//book.length=20\r\nvar image_m\r\nvar image_s\r\nfor (let i = 0; i < book.length; i++) {\r\nimage_m=book[i].ImageURL.replace(/_SL500_/, '_SL160_');\r\nimage_s=book[i].ImageURL.replace(/_SL500_/, '_SL75_');\r\nbook[i].image_m=image_m;\r\nbook[i].image_s=image_s;\r\n}\r\n //重複の削除\r\n//https://qiita.com/allJokin/items/28cd023335641e8796c5\r\n const uniqueUsers = Array.from(new Map(book.map((user) => [user.Asin, user])).values()\r\n);\r\n    return (\r\n    <div  id=\"book\">\r\n      {uniqueUsers.map(e => (\r\n     <div key={e.Asin}>\r\n        <a className=\"amazon-card-container\" target=\"_blank\" rel=\"noopener noreferrer\" href={e.URL}>\r\n          <div className=\"amazon-card-body\">\r\n            <div className=\"amazon-card-title\">{e.Title}</div>\r\n            <div className=\"amazon-card-domain\">価格：{e.Price}円、ポイント：{e.Points}、{e.Contributor}、出版社：{e.Publisher}、カテゴリー：{e.Category}</div>\r\n          </div>\r\n          <div className=\"amazon-card-image-container\">\r\n          <img className=\"amazon-card-image\"\r\n           srcSet={`${e.image_s} 320w, ${e.image_m} 640w, ${e.ImageURL} `}\r\n     src={e.image_s}\r\n     sizes=\"(max-width:1280px) 50vw, 1280px\"\r\n      loading=\"lazy\" alt={e.Title}/>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      ))}\r\n      \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Amazons\r\n","\r\nimport React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Amazons from \"../components/amazons\"\r\nimport Share from \"../components/share\"\r\n\r\nconst BlogPostTemplate = ({\r\n  data,\r\n  location,\r\n}) => {\r\nvar book = data.file.childrenJson\r\n const catesafe =data.site.siteMetadata.catesafe\r\nvar pubtag=data.file.childrenJson[0].Pubtag.split(',')\r\nvar catetag=data.file.childrenJson[0].Catetag.split(',')\r\ncatetag=catetag.filter(x => catesafe.includes(x))\r\npubtag.length=10\r\ncatetag.length=10\r\nconst siteTitle = data.site.siteMetadata?.title || `Title`\r\n    return (\r\n    <>\r\n        <Layout location={location} title={siteTitle}>\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">「Kindleセール」　{data.file.childrenJson[0].Saletitle}</h1>\r\n          <p>{data.file.childrenJson[0].Date}　出版社：{pubtag && pubtag.length > 0 && pubtag.map(pubtag => {\r\n          return (\r\n                  //<Link to={`/tags/${kebabCase(tag)}/`} itemProp=\"url\">\r\n                    <button>{pubtag}</button>\r\n                 // </Link>\r\n          )\r\n          })}カテゴリ：{catetag && catetag.length > 0 && catetag.map(catetag => {\r\n          return (\r\n                  //<Link to={`/tags/${kebabCase(tag)}/`} itemProp=\"url\">\r\n                    <button>{catetag}</button>\r\n                 // </Link>\r\n          )\r\n          })}\r\n          </p>\r\n        </header>\r\n        <Amazons book={book} />\r\n        <hr />\r\n        <Share\r\n          title={data.file.childrenJson[0].Saletitle}\r\n          url={`${data.site.siteMetadata.siteUrl}${data.file.fields.slug}`}\r\n          />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n          </article>\r\n        </Layout>\r\n        </>\r\n    )\r\n}\r\nexport const Head = ({ data}) => {\r\n  return (\r\n    <Seo\r\n      title={data.file.childrenJson[0].Saletitle}\r\n      ogpimage={data.file.childrenJson[0].ImageURL}\r\n      description={data.file.childrenJson[0].Saletitle}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\n\r\nexport  const query = graphql`\r\nquery MyQuery($slug: String!)  {\r\n  file(extension: {eq: \"json\"},fields: {slug: { eq: $slug } }) {\r\n    childrenJson {\r\n      Asin\r\n      Booktype\r\n      Category\r\n      Contributor\r\n      ImageURL\r\n      Points\r\n      Price\r\n      Publisher\r\n      Title\r\n      URL\r\n      Saletitle\r\n      Date(formatString: \"YYYY年MM月DD日\")\r\n      Catetag\r\n      Pubtag\r\n    }\r\n      fields {\r\n      slug\r\n    }\r\n  }\r\n      site {\r\n      siteMetadata {\r\n        title\r\n        siteUrl\r\n        catesafe\r\n      }\r\n    }\r\n}`\r\n"],"names":["book","image_m","image_s","i","length","ImageURL","replace","uniqueUsers","Array","from","Map","map","user","Asin","values","id","e","key","className","target","rel","href","URL","Title","Price","Points","Contributor","Publisher","Category","srcSet","src","sizes","loading","alt","Head","data","title","file","childrenJson","Saletitle","ogpimage","description","location","catesafe","site","siteMetadata","pubtag","Pubtag","split","catetag","Catetag","filter","x","includes","siteTitle","itemScope","itemType","itemProp","Date","url","siteUrl","fields","slug"],"sourceRoot":""}